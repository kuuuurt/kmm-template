name: Release (Philippines)
on:
  pull_request:
    branches:
      - dev/android/ph
      - staging/android/ph
      - internal-test/android/ph
      - alpha/android/ph
      - beta/android/ph
      - production/android/ph

env:
  GITHUB_DEST_REF: ${{ github.base_ref }}
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  PLAY_STORE_SERVICE_ACCOUNT_KEY: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_KEY }}

jobs:
  release:
    name: Release App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout project

      - name: Setup Keystore
        run: |
          echo "${{ secrets.PH_KEYSTORE }}" | base64 -d > android/philippines/app/plentina.jks
          echo '${{ secrets.PH_KEYSTORE_PROPERTIES }}' >> android/philippines/app/keystore.properties

      - name: Setup Secrets
        run: |
          echo '${{ secrets.COMMON_SHARED_SECRETS }}' >> shared/common/secrets.properties
          echo '${{ secrets.PH_SHARED_SECRETS }}' >> shared/philippines/secrets.properties
          echo '${{ secrets.VN_SHARED_SECRETS }}' >> shared/vietnam/secrets.properties
          echo '${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_KEY }}' > android/fastlane/play-store-service-account-key.json
          echo '${{ secrets.HUAWEI_APP_GALLERY_SECRETS }}' > android/fastlane/huawei-app-gallery.properties

      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Setup Node 14
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Set up Ruby 3.0
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: npm Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node
          restore-keys: |
            ${{ runner.os }}-node

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Release app
        working-directory: android
        run: |
          npm install -g firebase-tools
          gem install bundler
          bundle config path vendor/bundle
          bundle install
          RELEASE_LANE=releaseDevPh
          if [[ $GITHUB_DEST_REF  == *"dev"* ]]
            then
            RELEASE_LANE=releaseDevPh
          elif [[ $GITHUB_DEST_REF  == *"staging"* ]]
            then
            RELEASE_LANE=releaseStagingPh
          elif [[ $GITHUB_DEST_REF  == *"internal-test"* ]]
            then
            RELEASE_LANE=releaseInternalTestPh
          elif [[ $GITHUB_DEST_REF  == *"alpha"* ]]
            then
            RELEASE_LANE=releaseAlphaPh
          elif [[ $GITHUB_DEST_REF  == *"beta"* ]]
            then
            RELEASE_LANE=releaseBetaPh
          elif [[ $GITHUB_DEST_REF  == *"production"* ]]
            then
            RELEASE_LANE=releaseProductionPh
          fi
          echo "Running $RELEASE_LANE..."
          bundle exec fastlane $RELEASE_LANE firebaseToken:$FIREBASE_TOKEN

      - uses: actions/upload-artifact@v2
        with:
          name: release-artifacts
          path: |
            android/philippines/app/build/outputs/**/*.apk
            android/philippines/app/build/outputs/**/*.aab

      - name: Clean-up Secrets
        run: |
          KEYSTORE_FILE=cat android/philippines/app/keystore.properties | grep storeFile | cut -d '=' -f2
          rm -rf android/philippines/app/keystore.properties
          rm -rf $KEYSTORE_FILE
          rm -rf shared/common/secrets.properties
          rm -rf shared/philippines/secrets.properties
          rm -rf android/fastlane/play-store-service-account-key.json
          rm -rf android/fastlane/huawei-app-gallery.properties
